body {padding: 1em; }
div.banner {display:flex; justify-content:space-between; }

/* latin */
@font-face {
  font-family: 'Roboto Condensed';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/robotocondensed/v25/ieVl2ZhZI2eCN5jzbjEETS9weq8-19K7DQ.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* latin */
@font-face {
  font-family: 'Roboto Slab';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/robotoslab/v24/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjovoSmb2Rj.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* latin */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/roboto/v30/KFOlCnqEu92Fr1MmEU9fBBc4.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
title {
 font-size: 36px;
    color: white; 
    
}
body {
font-family: arial, helvetica, sans-serif;
background-color: #009CDE;
color: white;
}

h1 {
    font-size: 48px;
    color: white;    
}

h2 {
    font-size: 36px;
    color: #001E44; /* Nittany navy */
}

h3 {
    font-size: 1.5vw;
    color: white;
}

p {
    font-size: 14px;
    color: black;
}


/* unvisited link */
a:link {
  color: White;
}

/* visited link */
a:visited {
  color: #001E44;
}

/* mouse over link */
a:hover {
  color: #001E44;
}

/* selected link */
a:active {
  color: #001E44;
}

/*Paragraph color block*/
.block {
    background-color: white;
    opacity: 0.65;
    width: auto;
    height: auto;
    padding: 5px;
}

.PSB{
  position: relative;
  object-fit: contain;
  top: -10px;
  right: 0;
  width: 500px;
  height: 150px;
}


.pennStateFooter{
  position: relative;
  object-fit: contain;
  width: 200px;
  height: 100px;
}

footer.main {
    text-align: right;
    font-size: 9px;
}


.navbar{
    width: 85%;
    margin: auto;
    padding: 35px 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
}
.navbar ul li {
     list-style: none;
    display: inline-block;
    margin: 0 20px;
    position: relative;
}
.navbar ul li a {
       text-decoration: none;
    color: azure;
    text-transform: uppercase;
}
.navbar ul li::after{
    content: '';
    height: 3px;
    width: 0;
    background: #009688;
    position: absolute;
    left: 0;
    bottom: -10px;
    transition: 0.5s;
}
.navbar ul li:hover::after{
     width: 100%;
}
/* Project image gallery for main page */

section.gallery { display:flex; width:90%;}

figure.intro img {width:15vw; max-width:300px; border-radius:50%;}


/* NOT USING ::
 * iframe */

/*iframe {height:10vw; width:80vw;}*/


/*GRID*/
figure img {
object-fit: contain;
    max-width: 500px;
    width: 100%;
}

section#page div.transcription {
    flex: 2;
    padding: 5vw;
    background-color: white;
    border-radius: 15px;
    max-width: 300px;
    margin-bottom: 100px;
    font-size: 12px;
    color: black;
}

section#page div.transcription p {
    font-size: 12px;
}

.entry{
    width: 500px;
    height: 666px;
}
/*
.footer{
   /\* ebb: position:absolute means this always floats on the bottom 
    * of a screen, even on a long page where you scroll PAST thte bottom 
    * of a screen. So I think you want this to remain at the very bottm? *\/
    /\*  position: absolute; *\/
    background-color: gray;
    bottom: 0px; 
 color: white;   
}

div.footer a, div.footer p {
  color: white;  background-color:black;
}

div.footer a:visited{
    /\*color: blueviolet;*\/
    color:yellow;
}
div.footer p img{display:inline;}

*/


/* 2021-12-06 ebb: The following CSS is for the Reading View to make a CSS grid */
/*  section elements wrap each unit of calendar page information, so this is our 
 * CSS grid container.
 * 2021-12-08: ebb I'm revising this to use fr units (fractional units). These help for 
 * proportional scaling to the window. */
 
 /*  I'm using an atttribute selector to look for sections 
  * whose id attributes START WITH this string: e-1909  since those are the sections
  * we want to be grid containers*/
 section[id^="e-"] {
 background-color:lavender;
 border: thin solid maroon;
 display:grid;
 grid-auto-flow:column; 
 grid-template-columns:.8fr .2fr; 
 grid-column-gap:2em;
 }
 
 /*  let's try creating a grid for the div.facsblock, so all the text appears in a new column to the right of the image.  */
 
 section[id^="e-"] div.facsblock {
background-color:white; 
display:grid;
grid-auto-flow:column;
grid-template-columns: .75fr .23fr; 
/*  ebb: need to look up how minmax works.  */
grid-column-gap:2em;
padding:1em;
}

/* ebb: Here we are making the image size scale proportionally with the browser size: 
 * The CSS selector syntax reads: style the <img> element this way when its parent is a figure,
 *  and the figure's parent is something with class="facsblock".  */
div.facsblock > figure > img {
 object-fit:contain;
 width:100%;
   
}

/* This CSS selector syntax reads: Style the <div class="note"> when it's a descendant
 * of a <section> with an @id that starts with "e-1909". */
 section[id^="e-"] div.note  {
     padding:1em;
 }

/* The rule belows styles the OUTERMOST grid container. Maybe we'd like to control the spaces between the sections, so we can make a big
 * grid of the surrounding section#fulltext that holds all the calendar entries.
 * This time, we'll organize it in rows (vertically). I'm only doing this to specify a gap to appear in between each section. 
 *  */
 
/*section#fulltext {
    width:85%;
    margin:auto;
    display:grid;
    grid-auto-flow:row;
    grid-row-gap:50px;
}
*/
